@using PDP_Students.Application
@model PaginatedList<Student>
@{
	ViewData["Title"] = "Student details";
	var errorMessage = TempData["errorMessage"]?.ToString();
	var succesMassege = TempData["succesMassege"]?.ToString();
}
<h3>@ViewData["Title"]</h3>
<hr />
 @if (!string.IsNullOrEmpty(@errorMessage))
{
	<div class="alert alert-danger">
		<strong>Error! </strong>@errorMessage
		<button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>

	</div>
}
else if (!string.IsNullOrEmpty(@succesMassege))
{
	<div class="alert alert-success">
	<strong>Succes! </strong>@succesMassege
		<button type="button" class="btn-close float-end" data-bs-dismiss="alert" aria-label="Close"></button>

	</div>
}
<form>
	<button asp-controller="Student" asp-action="Create" class="btn btn-primary mb-3">Create Student</button>
		<div class="table-responsive">
		<table class="table">
		 <thead>
				<tr class="table-active ">
					<th scope ="col">Id</th>
				 <th>Full Name</th>
				 <th>User Name</th>
				 <th>Email</th>
				 <th>Phone</th>
				 <th>Action</th>
			 </tr>
		 </thead>
		 <tbody>
			@if(Model != null && Model.Any())
			{
                foreach(var student in Model)
                {
					<tr >
					<td >@student.Id</td>
					<td>@student.FullName</td>
					<td>@student.UserName</td>
					<td>@student.Email</td>
					<td>@student.Phone</td>
					<td>
						<div class="btn-group btn-group-sm">
							<a asp-controller="Student" asp-action="Edit" asp-route-id="@student.Id" class="btn btn-primary">Edit</a>
							<a asp-controller="Student" asp-action="Delete" asp-route-id="@student.Id" class="btn btn-danger">Delete</a>
						</div>
					</td>
					</tr>
				}
			}
			else
			{
				<tr>
					<td colspan="6">
						<div>
							Hozircha Studentlar Yo'q!!!
						</div>
					</td>
				</tr>
			}
		</tbody>
	 </table>
	</div>
</form>

	<!-- Pagination -->
	
<style>
	.pagination-container {
		display: flex;
		list-style: none;
		padding: 0;
		justify-content: flex-end;
	}

		.pagination-container a {
			margin: 0 5px;
			padding: 8px 12px;
			text-decoration: none;
			color: #007bff;
			border: 1px solid #007bff;
			border-radius: 4px;
			transition: background-color 0.3s;
		}

			.pagination-container a:hover {
				background-color: #007bff;
				color: #fff;
			}

		.pagination-container .active {
			background-color: #007bff;
			color: #fff;
			cursor: default;
		}
</style>
<div class="pagination-container">
	@if (Model.TotalPages > 1)
	{
		for (int i = 1; i <= Model.TotalPages; i++)
		{
			<a href="@Url.Action("Index", new { page = i })" class="@(i == Model.PageIndex ? "active" : "")">@i</a>
		}
	}
</div>
